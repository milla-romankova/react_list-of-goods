{"version":3,"sources":["components/GoodsList/GoodsList.js","components/Buttons/Buttons.js","App.js","index.js"],"names":["GoodsList","props","goods","className","map","good","key","id","name","Buttons","reverseList","sortByName","sortByLength","reset","selectByLength","numbers","lengthLimit","type","onClick","onChange","value","number","preparedGoods","App","state","isListVisible","isListReversed","sortBy","showList","setState","event","target","this","visibleGoods","filter","length","sort","good1","good2","localeCompare","reverse","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"6NAGaA,EAAY,SAACC,GAAW,IAC3BC,EAAUD,EAAVC,MAER,OACE,wBAAIC,UAAU,cACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBACEF,UAAU,mDACVG,IAAKD,EAAKE,IAETF,EAAKG,WCVHC,EAAU,SAACR,GAAW,IAE/BS,EAOET,EAPFS,YACAC,EAMEV,EANFU,WACAC,EAKEX,EALFW,aACAC,EAIEZ,EAJFY,MACAC,EAGEb,EAHFa,eACAC,EAEEd,EAFFc,QACAC,EACEf,EADFe,YAGF,OACE,yBAAKb,UAAU,6CACb,4BACEc,KAAK,SACLd,UAAU,8BACVe,QAASR,GAHX,WAQA,4BACEO,KAAK,SACLd,UAAU,mCACVe,QAASP,GAHX,uBAQA,4BACEM,KAAK,SACLd,UAAU,mCACVe,QAASN,GAHX,kBAQA,4BACEK,KAAK,SACLd,UAAU,qCACVe,QAASL,GAHX,SAQA,4BACEM,SAAUL,EACVM,MAAOJ,EACPb,UAAU,qBAETY,EAAQX,KAAI,SAAAiB,GAAM,OACjB,4BACEf,IAAKe,EACLD,MAAOC,GAENA,SCtCPC,G,MAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoClB,KAAI,SAAAC,GAAI,MAAK,CACjDG,KAAMH,EACNE,GAAIF,OA0HSkB,E,4MAtHbC,MAAQ,CACNF,gBACAG,eAAe,EACfC,gBAAgB,EAChBC,OAAQ,GACRX,YAAa,G,EAGfY,SAAW,WACT,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,eAAgBD,EAAMC,mB,EAI1Bf,YAAc,WACZ,EAAKmB,UAAS,SAAAL,GAAK,MAAK,CACtBE,gBAAiBF,EAAME,oB,EAI3Bf,WAAa,WACX,EAAKkB,UAAS,SAAAL,GAAK,MAAK,CACtBE,gBAAgB,EAChBC,OAAQ,Y,EAIZf,aAAe,WACb,EAAKiB,UAAS,SAAAL,GAAK,MAAK,CACtBE,gBAAgB,EAChBC,OAAQ,c,EAIZb,eAAiB,SAACgB,GAChB,EAAKD,SAAS,CACZb,YAAac,EAAMC,OAAOX,S,EAI9BP,MAAQ,WACN,EAAKgB,SAAS,CAEZJ,eAAe,EACfC,gBAAgB,EAChBC,OAAQ,GACRX,YAAa,K,uDAIP,IAAD,EAMHgB,KAAKR,MAJPR,EAFK,EAELA,YACAW,EAHK,EAGLA,OACAF,EAJK,EAILA,cACAC,EALK,EAKLA,eAGIO,EAAeD,KAAKR,MAAMF,cAAcY,QAC5C,SAAA7B,GAAI,OAAKA,EAAKG,KAAK2B,QAAUnB,KAG/BiB,EAAaG,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,IAAK,OACH,OAAOU,EAAMV,GAAQY,cAAcD,EAAMX,IAE3C,IAAK,SACH,OAAOU,EAAM7B,KAAK2B,OAASG,EAAM9B,KAAK2B,OAExC,QACE,OAAO,MAITT,GACFO,EAAaO,UAKf,OACE,yBAAKrC,UAAU,oCACb,6BACGsB,EAEG,6BACE,wBAAItB,UAAU,2BAAd,SACA,kBAAC,EAAD,CACED,MAAO+B,IAET,kBAAC,EAAD,CACEvB,YAAasB,KAAKtB,YAClBC,WAAYqB,KAAKrB,WACjBC,aAAcoB,KAAKpB,aACnBE,eAAgBkB,KAAKlB,eACrBD,MAAOmB,KAAKnB,MACZE,QAlBE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAmB9BC,YAAaA,KAKjB,4BACEC,KAAK,SACLd,UAAU,qCACVe,QAASc,KAAKJ,UAHhB,e,GAxGIa,IAAMC,eCrBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ea69df02.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {goods.map(good => (\n        <li\n          className=\"list-group-item list-group-item-dark text-center\"\n          key={good.id}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.shape({\n    goodName: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Buttons = (props) => {\n  const {\n    reverseList,\n    sortByName,\n    sortByLength,\n    reset,\n    selectByLength,\n    numbers,\n    lengthLimit,\n  } = props;\n\n  return (\n    <div className=\"d-flex justify-content-center card-footer\">\n      <button\n        type=\"button\"\n        className=\"btn btn-info text-uppercase\"\n        onClick={reverseList}\n      >\n        Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-info ml-2 text-uppercase\"\n        onClick={sortByName}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-info ml-2 text-uppercase\"\n        onClick={sortByLength}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"btn btn-danger ml-2 text-uppercase\"\n        onClick={reset}\n      >\n        Reset\n      </button>\n\n      <select\n        onChange={selectByLength}\n        value={lengthLimit}\n        className=\"btn btn-dark ml-2\"\n      >\n        {numbers.map(number => (\n          <option\n            key={number}\n            value={number}\n          >\n            {number}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nButtons.propTypes = {\n  reverseList: PropTypes.func.isRequired,\n  sortByName: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  selectByLength: PropTypes.func.isRequired,\n  lengthLimit: PropTypes.number.isRequired,\n  numbers: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import React from 'react';\n\nimport { GoodsList } from './components/GoodsList';\nimport { Buttons } from './components/Buttons';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map(good => ({\n  name: good,\n  id: good,\n}));\n\nclass App extends React.PureComponent {\n  state = {\n    preparedGoods,\n    isListVisible: false,\n    isListReversed: false,\n    sortBy: '',\n    lengthLimit: 1,\n  }\n\n  showList = () => {\n    this.setState(state => ({\n      isListVisible: !state.isListVisible,\n    }));\n  }\n\n  reverseList = () => {\n    this.setState(state => ({\n      isListReversed: !state.isListReversed,\n    }));\n  }\n\n  sortByName = () => {\n    this.setState(state => ({\n      isListReversed: false,\n      sortBy: 'name',\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      isListReversed: false,\n      sortBy: 'length',\n    }));\n  }\n\n  selectByLength = (event) => {\n    this.setState({\n      lengthLimit: event.target.value,\n    });\n  }\n\n  reset = () => {\n    this.setState({\n\n      isListVisible: true,\n      isListReversed: false,\n      sortBy: '',\n      lengthLimit: 1,\n    });\n  }\n\n  render() {\n    const {\n      lengthLimit,\n      sortBy,\n      isListVisible,\n      isListReversed,\n    } = this.state;\n\n    const visibleGoods = this.state.preparedGoods.filter(\n      good => (good.name.length >= lengthLimit),\n    );\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'name':\n          return good1[sortBy].localeCompare(good2[sortBy]);\n\n        case 'length':\n          return good1.name.length - good2.name.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isListReversed) {\n      visibleGoods.reverse();\n    }\n\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n      <div className=\"App card w-50 font-weight-bolder\">\n        <div>\n          {isListVisible\n            ? (\n              <div>\n                <h1 className=\"card-header text-center\">Goods</h1>\n                <GoodsList\n                  goods={visibleGoods}\n                />\n                <Buttons\n                  reverseList={this.reverseList}\n                  sortByName={this.sortByName}\n                  sortByLength={this.sortByLength}\n                  selectByLength={this.selectByLength}\n                  reset={this.reset}\n                  numbers={numbers}\n                  lengthLimit={lengthLimit}\n                />\n              </div>\n            )\n            : (\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary btn-lg btn-block\"\n                onClick={this.showList}\n              >\n                Start\n              </button>\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}